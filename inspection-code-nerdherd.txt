EntryLookupEngine.java
package csce4444;

//import java.io.File;
//import java.util.ArrayList;
//import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.NoSuchElementException;

import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
/**
 * This component's purpose is to do whatever is necessary to retrieve the most up-to-date swipe data from
 * the Pohl Recreation Center, and return it.
 * 
 * @author jeb
 */
@Component
public class EntryLookupEngine {
	
	private HashMap<Date, Integer> entryLookupMap;
	
	/**
	 * This constructor is automatically called when the application starts up.
	 * It's job is to initialize the map that contains the entry lookup data. 
	 */
	@Autowired
	public EntryLookupEngine() {
		entryLookupMap = initializeMap();
	}

	
	/**
	 * This method returns a quantity of entries for the past 15 minutes based on the supplied date.
	 * @param date The date object for the desired entries.
	 * @return The quantity of entries.
	 * @throws NoSuchElementException If an invalid date is specified, then this error will be thrown.
	 */
	public Integer get(Date date) throws NoSuchElementException, IllegalStateException {
		return entryLookupMap.get(date);
	}
	
	
	
	private HashMap<Date, Integer> initializeMap() throws IOException {
		// TODO DO THIS IBRAHIM

		FileInputStream file = new FileInputStream("C:/eclipse/Book1.xlsx");
		
		HashMap<Date, Integer> map = new HashMap<Date, Integer>();
		
		XSSFWorkbook wb = new XSSFWorkbook(file);
		XSSFSheet sheet = wb.getSheetAt(0);
		XSSFRow row = null;
		XSSFCell cell = null;
		
		Iterator<Row> rows = sheet.rowIterator();
		
		while (rows.hasNext()){
			Iterator<Cell> cells = rows.next().cellIterator();
			cell = (XSSFCell) cells.next();
			Date date = new Date();
			if (cell.getStringCellValue().equals("Sunday")
				date.setDay(Calendar.SUNDAY);
			if (cell.getStringCellValue().equals("Monday")
				date.setDay(Calendar.MONDAY);
			if (cell.getStringCellValue().equals("Tuesday")
				date.setDay(Calendar.TUESDAY);
			if (cell.getStringCellValue().equals("Wednesday")
				date.setDay(Calendar.WEDNESDAY);
			if (cell.getStringCellValue().equals("Thursday")
				date.setDay(Calendar.THURSDAY);
			if (cell.getStringCellValue().equals("Friday")
				date.setDay(Calendar.FRIDAY);
			if (cell.getStringCellValue().equals("Saturday")
				date.setDay(Calendar.SATURDAY);
			cell = (XSSFCell) cells.next();
			date.setTime((new SimpleDateFormat("HH:mm").parse(cell.getStringCellValue()).getTime());
			cell = (XSSFCell) cells.next();
			Integer value = Integer.parseInt(cell.getStringCellValue());
			entryLookupMap.put(date, value);
		}
				
		try {
			file.close();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return map;
	}	
}

SwolePatrol.java
package csce4444;

import java.sql.Time;
import java.time.LocalDateTime;
import java.time.ZoneOffset;
import java.time.temporal.ChronoUnit;
import java.time.temporal.TemporalUnit;
import java.util.Date;
import java.util.Map;
import java.util.Map.Entry;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;

// This class acts as the main web controller. When a web request comes in, it is handled by the appropriate
// RequestMapping method. Starts on port 8080 by default.

@Controller
@SpringBootApplication
public class SwolePatrol {

	// These are the components necessary for the application to function

	@Autowired
	private EntryLookupEngine entryLookupEngine;

	/**
	 * This method is what runs when the application starts. Its purpose is to run
	 * this class as a spring application.
	 * 
	 * @param args
	 */
	public static void main(String[] args) {
		// Set this class as the Spring Controller
		SpringApplication.run(SwolePatrol.class, args);
	}

	// These are the request mappings for handling web requests.

	@RequestMapping("/")
	public String index(Map<String, Object> model) {
		
		// GET CURRENT TIME
		
		Date now = new Date();
		Date fifteenMinutesAgo = Date.from((LocalDateTime.now()).minus(15, ChronoUnit.MINUTES).toInstant(ZoneOffset.of("CST")));
		Integer entriesForDate = entryLookupEngine.get(new Date());
		
		///////////////////////////////////////////////////////////////
		
		// replace variables in the html file
		model.put("swipes", "" + entriesForDate /*entriesForDate*/);
		model.put("currentTime", now.toString());
		return "index"; // this is the name of the html file to return
	}

}

style.css
div
{	
}

/* format setting for h1 (which is time) */
h1
{
	color: black;
	text-align: center;
	font-style: verdana;
	background-color: lightgrey;
	width: 400px;
	border: 15px solid black;
	padding: 25px;
	margin: 25px auto;
}	

/* temp div to hold where dynamic data will be --> */
div2 
{
	color: red;	
}

/*format settings for displaying number of gym goers */
p 
{
	font-style: verdana;
	text-align: center;
	background-color: lightgrey;
	width: 500px;
	border: 10px solid black;
	padding: 25px;
	margin: 25px auto;
	font-weight: bold;
	font-size: 1.25em;
}


/* Style for the background */
body 
{
	background-image: url("http://www.meangreenmap.com/images/weightroom/weightroom1.jpg");
	 background-size: cover;
	background-repeat: no-repeat;
}

/* Style for displaying the current time */
.marquee 
{
	box-sizing: border-box;
	width: 460px;
	margin: 0 auto;
	background:lightgrey;
	white-space: nowrap;
	overflow: hidden;
	color:blue;
	font-size:18px;
}

index.html
<!DOCTYPE html>	

<html>
	<!-- header has the link to the CSS file -->
	<head>
		<link rel="stylesheet" th:href="@{/style.css}"
			href="../../style.css" />
	</head>


	<body>
	
		<!-- current time section-->
		<h1>
			<div> Current Time: </div>
			<div2 th:text="${currentTime}"></div2>
			
			<!-- NOTE: The command below this line will display time when java is connected -->
			<!-- <p class="marquee"><span id="dtText"></span></p> -->
			
				
				<!-- NOTE: The two lines of code below this line will go into java to pull the current time -->
				<!-- var today = new Date(); -->
				<!-- document.getElementById('dtText').innerHTML=today; -->
		</h1>
		
		
		
		<!-- display data section -->
		<p> 
		
			<div3>Average number of gym members in the last 15 minutes:</div3>
			<div2 th:text="${swipes}"></div2>

		</p>
		
	</body>
	
	
</html>

pom.xml
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.7.RELEASE</version>
	</parent>
	<groupId>com.csce4444.nerdherd</groupId>
	<artifactId>swolepatrol</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>Swole Patrol</name>
	<description>Swole Patrol is a webapp designed to report metric about the capacity of the UNT Pohl Recreation Center</description>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>3.17</version>
		</dependency>
	</dependencies>
</project>
